- [ ] 绘制窗体。

	调用setGeometry(300,300, 1200, 600)绘制窗体,窗体位置，距离屏幕左上角坐标为(300, 300) 窗体的宽度x高度为1200x600，空白窗体。

- [ ] 绘制矩形边界。

	调用setPen()设置画笔及颜色，调用drawRect()函数，绘制矩形边界770x420，矩形左上角坐标为(list[0][0],list[0][0]),蓝色线条。


- [ ] 定义一个蛇类，蛇类的结构如下

	数据成员：

	- [ ] 使用list数据结构存储的每一块矩形区域的坐标组合。list = [ [80, 10], [10, 10] ]


	函数成员：

	- [ ] 绘制蛇 

		调用setBrush()设置画笔为画刷，颜色为默认的黑色,遍历整个list[i][j]，调用drawRect(list[i][0],list[i][1], 60, 60),将全部的矩形绘制出来。其中list[0]为蛇的头，其他元素的作为蛇的身体，list[-1]是蛇的最后一个元素。

	- [ ] 输入处理

		读取用户输入的方向值

		如果输入的方向值与当前方向值相反(当前方向与原方向异或结果为3)，则蛇继续向当前方向移动。

		如果输入的方向值与当前方向值结果不相反，

			如果输入的方向值为0，即表示向右移动，则将list[0][0]的值增加70.

			如果输入的方向值为1，即表示向上移动，则将list[0][1]的值减少70.

			如果输入的方向值为2，即表示向下移动，则将list[0][1]的值增加70.

			如果输入的方向值为3，即表示向左移动，则将list[0][0]的值减少70.

	- [ ] 蛇移动

		将当前的list[0]作为蛇头的坐标数据，然后将list第一个元素(list[0])赋值给list最后一个元素(list[-1]),然后，根据方向值不同，对list[0]的坐标进行输入处理。然后将蛇绘制出来。


	- [ ] 设置蛇的移动方式

		设置间隔周期为1s定时器，使用信号槽connect函数，使得定时器每隔1s，触发一次，蛇移动的move操作。

		参考如下代码：

		```python
			timer = QtCore.QTimer() #定义一个定时器
			timer.timerout.connect(move) #每隔定时器设定的时间，调用一次move函数，使蛇移动一次
			timer.start(1000) #设置每隔1000ms，产生一个定时器信号
		```

	- [ ] 蛇死亡
		
		调用setBrush()设置画笔为画刷，颜色为默认的灰色,遍历整个list[i][j]，调用drawRect(list[i][0],list[i][1], 60, 60),将全部的矩形绘制出来。其中list[0]为蛇的头，其他元素的作为蛇的身体，list[-1]是蛇的最后一个元素。

		游戏结束

	- [ ] 撞墙
		
		如果list[0]的坐标，超出矩形边界，则表明蛇撞墙。即list[0][0]的值超出[10,780](闭区间), 或者list[0][1]超出[10,430]表示的区间。

		蛇死亡

		如果list[0]的坐标，

	- [ ] 撞到自己
		
		如果list[0][0]和list[0][1]的值同时等于list[i][0]和list[i][1]的两个值，则表明蛇撞到了自己。
		
		蛇死亡


	- [ ] 撞到食物
		如果list[0][0]和list[0][1]的值，同时等于食物类的xfood, yfood,则蛇发生增长


	- [ ] 发生碰撞

	  判断发生碰撞类型

		- [ ] 如果未碰撞到墙壁或者食物，则执行move函数，蛇移动。

       如果碰撞到墙壁或者自己，则变灰。

			 如果碰撞到食物，则蛇变长，(速度加快)，也就是，食物的坐标变为新的 蛇头，并且，按照原来的方向继续移动。


- [ ] 定义一个食物类

	- [ ] 数据成员

		xfoodlist = [10, 80, 150, 220, 290, 360, 430, 500, 570, 640, 710]

		yfoodlist =	[10, 80, 150, 220, 290, 360]


	- [ ] 函数成员

		- [ ] 绘制食物。

			调用setBrush()函数设置画笔为画刷，颜色为红色。

		
		- [ ] 食物坐标
			引用随机函数所在模块ramdom，并调用随机函数ramdom.choice()得到符合食物坐标随机生成规则的随机坐标(xfood,yfood):

			同时，由于食物不能出现在蛇的身体上，还要除去蛇自身所占用的坐标。

			xfood = random.choice(xfoodlist与蛇自身所占用的坐标的交集)
	
			yfood = random.choice(yfoodlist与蛇自身所占用的坐标的交集)
		
			
			posfood = [xfood, yfood ]
	
			调用drawRect(xfood, yfood, 60, 60),绘制食物。
